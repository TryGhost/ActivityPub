version: '3.8'

services:
  minio:
    image: minio/minio:latest@sha256:a616cd8f37758b0296db62cc9e6af05a074e844cc7b5c0a0e62176d73828d440
    container_name: populate-explore-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create bucket on MinIO startup
  minio-setup:
    image: minio/mc:latest@sha256:09f93f534cde415d192bb6084dd0e0ddd1715fb602f8a922ad121fd2bf0f8b44
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minioadmin minioadmin;
      mc mb local/explore-data || true;
      mc anonymous set public local/explore-data || true;
      echo 'MinIO setup complete';
      "

  # The main app service
  app:
    build: .
    depends_on:
      minio-setup:
        condition: service_completed_successfully
    environment:
      # Curator configuration
      CURATOR_ACCOUNT_HANDLE: ${CURATOR_ACCOUNT_HANDLE:-@index@pubactivity.ghost.io}

      # S3 configuration for MinIO
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET_NAME: explore-data
      S3_FILE_PATH: explore/accounts.json
      S3_REGION: us-east-1
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin

      # Request configuration
      MAX_CONCURRENT_REQUESTS: ${MAX_CONCURRENT_REQUESTS:-10}

  populate-explore-json-dev:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY_ID=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET_NAME=explore-data
      - CURATOR_ACCOUNT_HANDLE=${CURATOR_ACCOUNT_HANDLE:-@index@activitypub.ghost.org}
    command: tsx watch index.ts
    depends_on:
      minio:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully

volumes:
  minio_data:
